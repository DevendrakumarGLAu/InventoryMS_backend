CREATE TABLE `products` (
  `id` int NOT NULL AUTO_INCREMENT,
  `category` varchar(255) DEFAULT NULL,
  `quantity` int DEFAULT NULL,
  `productName` varchar(255) DEFAULT NULL,
  `costPrice` decimal(10,2) DEFAULT NULL,
  `estimate_sellingPrice` int DEFAULT NULL,
  `manufacturingDate` date DEFAULT NULL,
  `expiryDate` date DEFAULT NULL,
  `sell_quantity` int DEFAULT NULL,
  `unit_sellingPrice` int DEFAULT NULL,
  `remaining_stock` int DEFAULT NULL,
  `net_sellingPrice` int DEFAULT NULL,
  `Total_sales` int DEFAULT NULL,
  `total_quantity_sold` int DEFAULT NULL,
  `category_id` int DEFAULT NULL,
  `product_id` int DEFAULT NULL,
  `CostPerPiece` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE signup (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL
);
insert into signup(username,email,password)
value ('devendra_kumar','dev@gmail.com','devendra123');

CREATE TABLE category (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
payload for insert-
{
    "table_name": "category",
    "action": "insert",
    "column_data": {
        "name": "food"
    }
}

CREATE TABLE Orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    mobile VARCHAR(15)
);

CREATE TABLE OrderDetails (
    order_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    sno INT,
    category_id INT,
    product_id INT,
    quantity INT,
    category_name VARCHAR(255),
    product_name VARCHAR(255),
    FOREIGN KEY (order_id) REFERENCES Orders(order_id)
);


CREATE TABLE vendors (
    id INT AUTO_INCREMENT PRIMARY KEY,
    vendorName VARCHAR(255) NOT NULL,
    productName VARCHAR(255) NOT NULL,
    companyName VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    mobile VARCHAR(15)
);
CREATE TABLE users_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    password VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    role ENUM('admin', 'user') NOT NULL,
    action TINYINT(1) NOT NULL
);
alter table users_details
add column confirmPassword VARCHAR(255) NOT NULL;

INSERT INTO defaultdb.users_details
(name, email, phone, password, address, `role`, `action`, confirmPassword)
VALUES('Devendra', 'dev@gmail.com', '9876543210', 'Dev@1997', 'Mahadev Nagar', 'Admin', 0, 'Dev@1997');

alter table vendors
add column category_id int;
alter table vendors
add column product_id int;


CREATE TABLE `roles_permissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  `view` TINYINT(1) NOT NULL DEFAULT 0,
  `edit` TINYINT(1) NOT NULL DEFAULT 0,
  `delete` TINYINT(1) NOT NULL DEFAULT 0,
  `add` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`role_id`) REFERENCES `roles`(`id`)
);
INSERT INTO `roles_permissions` (`role_id`, `view`, `edit`, `delete`, `add`)
VALUES
(1, 1, 1, 1, 1),  -- Role 1 has all permissions (view, edit, delete, add)
(2, 1, 0, 1, 0);  -- Role 2 has view and delete permissions only


CREATE TABLE sell_product (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    sell_quantity INT NOT NULL,
    unit_selling_price DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE customer_orders_bill (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    customer_mobile VARCHAR(15) NOT NULL,
    orders JSON NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
